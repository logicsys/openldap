#####
#
# This is a slapd.conf file.  See slapd.conf(5) for more info.
#
# Generated by Chef. Do not hand edit
#
####

<% if node['openldap']['server_id'] -%>
serverID <%= node['openldap']['server_id'] %>
<%- end -%>
# TLS configuration
<% if node['openldap']['tls_enabled'] || node['openldap']['ldaps_enabled']-%>
TLSCertificateFile     <%= node['openldap']['tls_cert'] %>
TLSCertificateKeyFile  <%= node['openldap']['tls_key'] %>
<% if node['openldap']['tls_cafile'] -%>
TLSCACertificateFile   <%= node['openldap']['tls_cafile'] %>
<% end -%>
<% if node['openldap']['tls_ciphersuite'] -%>
TLSCipherSuite         <%= node['openldap']['tls_ciphersuite'] %>
<% end -%>

# Schema and objectClass definitions
<% node['openldap']['schemas'].sort.each do |schema| -%>
include         <%= openldap_dir %>/schema/<%= schema %>
<% end -%>

# Where the pid file is put. The init.d script will not stop the server if you
# change this.
pidfile         <%= openldap_run_dir %>/slapd.pid

# List of arguments that were passed to the server
argsfile        <%= openldap_run_dir %>/slapd.args

# Read slapd.conf(5) for possible values
loglevel        <%= node['openldap']['loglevel'] %>

<% unless node['openldap']['modules'].empty? -%>
# Where the dynamically loaded modules are stored
modulepath       <%= openldap_module_dir %>
<% node['openldap']['modules'].sort.each do |mod| -%>
moduleload       <%= mod %>
<% end -%>
<% if ['provider', 'peer' ].include? node['openldap']['slapd_type'] -%>
moduleload       syncprov
<% end -%>

# The tool-threads parameter sets the actual amount of cpu's that is used for
# indexing.
tool-threads     1

#######################################################################
# Specific Backend Directives for hdb:
# Backend specific directives apply to this backend until another 'backend'
# directive occurs
backend		<%= node['openldap']['database'] %>

#####
# Database
#####
database        <%= node['openldap']['database'] %>
suffix          "<%= node['openldap']['basedn'] %>"
rootdn          "cn=<%= node['openldap']['cn'] %>,<%= node['openldap']['basedn'] %>"
rootpw          <%= node['openldap']['rootpw'] %>
directory       "<%= openldap_db_dir %>"
lastmod         on
monitoring      off

<% if node['openldap']['database'] == 'hdb' -%>
dbconfig set_cachesize <%= node['openldap']['dbconfig']['set_cachesize'] %>

# Number of objects that can be locked at the same time.
dbconfig set_lk_max_objects <%= node['openldap']['dbconfig']['set_lk_max_objects'] %>
# Number of locks (both requested and granted)
dbconfig set_lk_max_locks <%= node['openldap']['dbconfig']['set_lk_max_locks'] %>
# Number of lockers
dbconfig set_lk_max_lockers <%= node['openldap']['dbconfig']['set_lk_max_lockers'] %>
<% end -%>

##
# Indexes
##
<% node['openldap']['indexes'].each do |value| -%>
index <%= value %>
<% end -%>

<% if node['openldap']['slapd_type'] == "provider" -%>
<% node['openldap']['syncrepl_provider_config'].each do |key, value| -%>
<%= key %> <%= value %>
<% end -%>

<% if [ 'provider', 'peer' ].include? node['openldap']['slapd_type'] -%>
overlay syncprov
syncprov-checkpoint 100 10
syncprov-sessionlog 100
<% end -%>

<% if [ 'consumer', 'peer' ].include? node['openldap']['slapd_type'] -%>
<% proto = (node['openldap']['syncrepl_use_tls'] == 'ldaps') ? 'ldaps' : 'ldap' -%>
<% port = (node['openldap']['syncrepl_use_tls'] == 'ldaps') ? '636' : '389' -%>
syncrepl rid=<%= node['openldap']['slapd_rid'] %>
<% if node['openldap']['slapd_provider'] -%>
  provider=<%= node['openldap']['syncrepl_uri'] %>://<%= node['openldap']['slapd_provider'] %>:<%= node['openldap']['syncrepl_port'] %>
<% else %>
  provider=<%= node['openldap']['syncrepl_uri'] %>://<%= node['openldap']['server'] %>:<%= node['openldap']['syncrepl_port'] %>
<% end -%>
<% node['openldap']['syncrepl_consumer_config'].each do |key, value| -%>
  <%= key %>=<%= value %>
<% end -%>
  type=<%= node['openldap']['syncrepl_type'] %>
  interval=<%= node['openldap']['syncrepl_interval'] %>
  searchbase="<%= node['openldap']['basedn'] %>"
<% if  node['openldap']['syncrepl_filter'] -%>
  filter="<%= node['openldap']['syncrepl_filter'] %>"
<% end -%>
<% if  node['openldap']['syncrepl_attrs'] -%>
  attrs="<%= node['openldap']['syncrepl_attrs'] %>"
<% end -%>
<% if  node['openldap']['syncrepl_retry'] -%>
  retry="<%= node['openldap']['syncrepl_retry'] %>"
<% end -%>
  scope=sub
  schemachecking=off
  bindmethod=simple
  binddn="<%= node['openldap']['syncrepl_cn'] %>,<%= node['openldap']['basedn'] %>"
<% unless node['openldap']['syncrepl_use_tls'] == 'ldaps' -%>
  starttls=<%= node['openldap']['syncrepl_use_tls'] %>
<% end -%>
<% unless node['openldap']['syncrepl_tls_config'].nil? -%>
  <% node['openldap']['syncrepl_tls_config'].each do |key, value| -%>
  tls_<%= key %>="<%= value %>"
  <% end -%>
<% end -%>
  credentials="<%= node['openldap']['slapd_replpw'] %>"
<% end -%>
<% if node['openldap']['slapd_type'] == 'peer' -%>
mirrormode TRUE
<% end -%>

<% node['openldap']['server_config_hash'].each do |key, value| -%>
<%   case value -%>
<%   when nil -%>
<%= key %>
<%   when Array -%>
<%= key %>
<%     value.each do |v| -%>
  <%= v %>
<%     end -%>
<%   when String, Integer -%>
<%=    key %> <%= value %>
<%   end -%>
<% end -%>

# The userPassword by default can be changed by the entry owning it if they are
# authenticated. Others should not be able to see it, except the admin entry
# below. These access lines apply to database #1 only.
access to attrs=<%= node['openldap']['user_attrs'] %>
        by group.exact="cn=<%= node['openldap']['admin_cn'] %>,<%= node['openldap']['basedn'] %>" write
<% if node['openldap']['ppolicy'] -%>
### Load password overlay
overlay ppolicy
ppolicy_default "cn=passwordDefault,ou=Policies,<%= node['openldap']['basedn'] %>"
<% if node['openldap']['ppolicy_hash_cleartext'] -%>
ppolicy_hash_cleartext
<% end -%>
<% if node['openldap']['ppolicy_use_lockout'] -%>
ppolicy_use_lockout
<% end -%>

<% if node['openldap']['auditlog'] -%>
### Load audit log overlay
overlay auditlog
auditlog <%= node['openldap']['auditlog_file'] %>
<% end -%>

# The userPassword by default can be changed
# by the entry owning it if they are authenticated.
# Others should not be able to see it, except the
# admin entry below
# These access lines apply to database #1 only
access to attrs=userPassword,shadowLastChange
        by group.exact="cn=administrators,<%= node['openldap']['basedn'] %>" write
<% if ['provider', 'peer'].include? node['openldap']['slapd_type'] -%>
        by dn="<%= node['openldap']['syncrepl_cn'] %>,<%= node['openldap']['basedn'] %>" read
<% end -%>
        by anonymous auth
        by self write
        by * none

# Ensure read access to the base for things like supportedSASLMechanisms.
# Without this you may have problems with SASL not knowing what mechanisms are
# available and the like. Note that this is covered by the 'access to *' ACL
# below too but if you change that as people are wont to do you'll still need
# this if you want SASL (and possible other things) to work happily.
access to dn.base="" by * read

# The admin dn has full write access, everyone else can read everything.
access to *
<% if ['provider', 'peer'].include? node['openldap']['slapd_type'] -%>
        by dn="<%= node['openldap']['syncrepl_cn'] %>,<%= node['openldap']['basedn'] %>" read
<% end -%>
        by * read

<% unless node['etc']['passwd'][node['openldap']['system_acct']].nil? -%>
<% ldap_uid = node['etc']['passwd'][node['openldap']['system_acct']]['uid'] -%>
<% ldap_gid = node['etc']['passwd'][node['openldap']['system_group']]['gid'] -%>
<% end -%>
database config
access to *
        by dn.exact="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" manage
<% unless ldap_uid.nil? -%>
        by dn.exact="gidNumber=<%= ldap_gid %>+uidNumber=<%= ldap_uid %>,cn=peercred,cn=external,cn=auth" manage
<% end -%>
        by * none
